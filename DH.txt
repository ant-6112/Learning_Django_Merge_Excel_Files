import os
import zipfile
import xml.etree.ElementTree as ET
import wx

class Mywin(wx.Frame): 
   def __init__(self, parent, title): 
      super(Mywin, self).__init__(parent, title = title, size = (250,150)) 
      panel = wx.Panel(self) 
      box = wx.BoxSizer(wx.VERTICAL) 

      self.path = wx.TextCtrl(panel) 
      box.Add(self.path, flag = wx.EXPAND|wx.ALL, border = 10) 

      self.find = wx.TextCtrl(panel) 
      box.Add(self.find, flag = wx.EXPAND|wx.ALL, border = 10) 

      self.replace = wx.TextCtrl(panel) 
      box.Add(self.replace, flag = wx.EXPAND|wx.ALL, border = 10) 

      self.button = wx.Button(panel, -1, "Start", size = (50,50)) 
      self.button.Bind(wx.EVT_BUTTON, self.OnClicked) 
      box.Add(self.button, 0, flag = wx.ALIGN_CENTER) 

      panel.SetSizer(box) 
      self.Centre() 
      self.Show(True) 

   def OnClicked(self, event): 
      path = self.path.GetValue() 
      find = self.find.GetValue() 
      replace = self.replace.GetValue() 
      self.find_and_replace(path, find, replace)

   def find_and_replace(self, path, find, replace):
      with zipfile.ZipFile(path, 'r') as myzip:
         for filename in myzip.namelist():
            if filename.endswith('.xml'):
               with myzip.open(filename) as myfile:
                  tree = ET.parse(myfile)
                  root = tree.getroot()
                  for elem in root.iter():
                     if elem.text == find:
                        elem.text = replace
                  tree.write(filename)
      with zipfile.ZipFile(path, 'w') as myzip:
         for filename in os.listdir('.'):
            if filename.endswith('.xml'):
               myzip.write(filename)

app = wx.App() 
Mywin(None, 'Find and Replace in XML') 
app.MainLoop() 

# Load assemblies
Add-Type -AssemblyName PresentationFramework,System.Windows.Forms

# Create XAML markup for the UI
$xaml = @"
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        Title="Directory Size Checker" Height="350" Width="525">
    <Grid>
        <Label Content="Directory Path:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
        <TextBox Name="txtDirectoryPath" HorizontalAlignment="Left" Height="23" Margin="10,30,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <Label Content="Minimum Size (MB):" HorizontalAlignment="Left" Margin="10,60,0,0" VerticalAlignment="Top"/>
        <TextBox Name="txtMinSize" HorizontalAlignment="Left" Height="23" Margin="10,80,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <DataGrid Name="dataGrid" HorizontalAlignment="Left" Margin="10,110,0,0" VerticalAlignment="Top" Height="200" Width="300">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Column1" Width="*"/>
                <DataGridTextColumn Header="Column2" Width="*"/>
                <DataGridTextColumn Header="Column3" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
"@

# Parse the XAML
$reader=(New-Object System.Xml.XmlNodeReader $xaml)
$window=[Windows.Markup.XamlReader]::Load( $reader )

# Get elements from the window
$txtDirectoryPath = $window.FindName("txtDirectoryPath")
$txtMinSize = $window.FindName("txtMinSize")
$dataGrid = $window.FindName("dataGrid")

# Add dummy data to the data grid
for ($i=0; $i -lt 5; $i++) {
    $dataGrid.Items.Add(@{"Column1"="Row $($i+1)"; "Column2"="Row $($i+1)"; "Column3"="Row $($i+1)"})
}

# Show the window
$window.ShowDialog() | Out-Null

